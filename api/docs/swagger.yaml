definitions:
  http.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
  models.CaptureTransactionsRequest:
    properties:
      account_id:
        type: string
      transaction_ids:
        items:
          type: string
        type: array
    type: object
  models.ConfirmPaymentRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.DepositRequest:
    properties:
      account_id:
        type: string
      amount:
        type: number
    type: object
  models.LoginUserRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    type: object
  models.RegisterUserRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.TransferRequest:
    properties:
      amount:
        type: number
      from_account_id:
        type: string
      to_account_id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      guid:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  models.UserWithAuth:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.WithDrawalRequest:
    properties:
      account_id:
        type: string
      amount:
        type: number
    type: object
info:
  contact: {}
  description: This is online banking API
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      operationId: login_user
      parameters:
      - description: Request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserWithAuth'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Login User
      tags:
      - User
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register User
      operationId: user_register
      parameters:
      - description: Request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserWithAuth'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register User
      tags:
      - User
  /api/v1/payments/capture:
    post:
      consumes:
      - application/json
      description: Capture Payment
      parameters:
      - description: Capture Payment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CaptureTransactionsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Capture Payment
      tags:
      - Payment
  /api/v1/payments/confirm:
    post:
      consumes:
      - application/json
      description: Confirm Payment
      parameters:
      - description: Confirm Payment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmPaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Confirm Payment
      tags:
      - Payment
  /api/v1/payments/deposit:
    post:
      consumes:
      - application/json
      description: Deposit
      parameters:
      - description: Deposit
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.DepositRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Deposit
      tags:
      - Payment
  /api/v1/payments/transfer:
    post:
      consumes:
      - application/json
      description: Transfer
      parameters:
      - description: Transfer
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.TransferRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Transfer
      tags:
      - Payment
  /api/v1/payments/withdrawal:
    post:
      consumes:
      - application/json
      description: Withdrawal
      parameters:
      - description: Withdrawal
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.WithDrawalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Withdrawal
      tags:
      - Payment
  /api/v1/user/accounts:
    get:
      consumes:
      - application/json
      description: Get Accounts
      operationId: get_accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get Accounts
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: Create Account
      operationId: create_account
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create Account
      tags:
      - Account
  /api/v1/user/accounts/{id}:
    get:
      consumes:
      - application/json
      description: Get Account
      operationId: get_account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get Account
      tags:
      - Account
  /api/v1/user/accounts/{id}/transactions:
    get:
      consumes:
      - application/json
      description: Get Account Transactions
      operationId: get_account_transactions
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get Account Transactions
      tags:
      - Account
  /api/v1/user/accounts/{id}/transactions/{transaction_id}:
    get:
      consumes:
      - application/json
      description: Get Account Transaction
      operationId: get_account_transaction
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get Account Transaction
      tags:
      - Account
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
